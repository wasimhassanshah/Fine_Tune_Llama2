question,cypher,type,database,syntax_error,timeout,returns_results,schema
What are the top 5 products managed by the Haiti Field Office?,"MATCH (o:Office{name: 'Haiti Field Office'})-[:MANAGED_BY]->(p:Product)
RETURN p
ORDER BY p.line_item_quantity DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the product groups associated with products managed by the Haiti Field Office.,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
MATCH (p)-[:MANAGED_BY]->(:Office {name: 'Haiti Field Office'})
RETURN DISTINCT pg.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Show the first 3 brands associated with products that have an item description including 'HIV Kit'.,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.item_description CONTAINS 'HIV Kit'
RETURN DISTINCT b.name
LIMIT 3",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which countries receive products from vendors named 'ABBOTT LABORATORIES (PUERTO RICO)'?,"MATCH (v:Vendor {name: 'ABBOTT LABORATORIES (PUERTO RICO)'})-[:VENDOR]->(p:Product)-[:WEIGHT]->(c:Country)
RETURN DISTINCT c.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of products managed by the Ethiopia Field Office with a line item quantity less than 20?,"MATCH (p:Product)-[:MANAGED_BY]->(:Office{name: 'Ethiopia Field Office'})
WHERE p.line_item_quantity < ""20"" AND p.line_item_quantity IS NOT NULL
RETURN p.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products to offices that manage more than 3 different types of product groups?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:GROUP]->(pg:Product_Group)
MATCH (p)-[:MANAGED_BY]->(o:Office)
WITH v, o, count(DISTINCT pg) AS numProductGroups
WHERE numProductGroups > 3
RETURN DISTINCT v.name AS Vendor, o.name AS Office, numProductGroups as NumberOfProductGroups",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the offices that manage products under the 'Malaria' sub class.,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'Malaria'})
RETURN o;",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the brands of products that have a project code ending in 'T01' and are associated with the 'ANTM' group.,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.project_code ENDS WITH 'T01' 
AND (p)-[:GROUP]->(:Product_Group {name: 'ANTM'})
RETURN DISTINCT b.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which countries are linked to products with a shipment number that includes '52'?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.shipment_number IS NOT NULL AND p.shipment_number CONTAINS '52'
RETURN DISTINCT c.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the products that have a unit of measure per pack of 30 and are managed by the PMO - US office.,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack = ""30""
AND (p)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN p",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Show the top 3 most expensive products managed by any office based on their pack price.,"MATCH (p:Product)-[:MANAGED_BY]->(o:Office)
WHERE p.pack_price IS NOT NULL
RETURN p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 3",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the products that have an item description containing 'Rapid Test' and a shipment number 'DN-112'.,"MATCH (p:Product)
WHERE p.item_description CONTAINS 'Rapid Test' 
AND p.shipment_number = 'DN-112'
RETURN p",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the products that are part of the 'Pediatric' sub class and have a shipment number 'ASN-608'?,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'Pediatric'})
WHERE p.shipment_number = 'ASN-608'
RETURN p.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the names of product groups for products that have a project code '100-HT-T01'.,"MATCH (p:Product)
WHERE p.project_code = '100-HT-T01'
MATCH (p)-[:GROUP]->(pg:Product_Group)
RETURN pg.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the countries where products with a molecule test type containing 'OraQuick' are sent.,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.molecule_test_type CONTAINS 'OraQuick' AND p.molecule_test_type IS NOT NULL
RETURN DISTINCT c.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage products categorized under the 'HIV test' sub class with a pack price over $200?,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'HIV test'})
WHERE p.pack_price IS NOT NULL AND toFloat(p.pack_price) > 200
MATCH (o:Office)-[:MANAGED_BY]->(p)
RETURN o, p",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the brands associated with products that have a shipment number starting with 'DN' and a molecule test type including 'HIV'.,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.shipment_number STARTS WITH 'DN' 
AND p.molecule_test_type CONTAINS 'HIV'
RETURN DISTINCT b.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of products with a pack price over $150 managed by the Haiti Field Office?,"MATCH (p:Product)-[:WEIGHT]->(:Country)
MATCH (p)-[:GROUP]->(:Product_Group)
MATCH (p)-[:SUB_CLASS]->(:Sub_Class)
MATCH (v:Vendor)-[:VENDOR]->(p)
MATCH (o:Office {name: 'Haiti Field Office'})-[:MANAGED_BY]->(p)
WHERE toFloat(p.pack_price) > 150.0
RETURN p.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 5 brands by the number of products available?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
RETURN b.name, count(p) AS numProducts
ORDER BY numProducts DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 countries with the highest number of products shipped based on the shipment number.,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.shipment_number IS NOT NULL
RETURN c.name, count(p) AS numProductsShipped
ORDER BY numProductsShipped DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply the top 5 most expensive products based on pack price?,"MATCH (p:Product)-[:VENDOR]->(v:Vendor)
WHERE p.pack_price IS NOT NULL
RETURN v.name, p.pack_price
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 product groups with the most diverse range of item descriptions.,"MATCH (p:Product)
WHERE p.item_description IS NOT NULL
WITH p.product_group AS productGroup, count(DISTINCT p.item_description) AS diversity
RETURN productGroup, diversity
ORDER BY diversity DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 5 sub-classes by the variety of molecule test types they include?,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.molecule_test_type IS NOT NULL
RETURN sc.name, count(DISTINCT p.molecule_test_type) AS molecule_count
ORDER BY molecule_count DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products with a pack price less than $50 and are managed by the South Africa Field Office?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE toFloat(p.pack_price) < 50.0
AND (p)-[:WEIGHT]->(:Country)
AND (p)-[:GROUP]->(:Product_Group)
AND (p)-[:SUB_CLASS]->(:Sub_Class)
AND (p)-[:BRAND]->(:Brand)
AND (p)-[:MANAGED_BY]->(:Office {name: 'South Africa Field Office'})
RETURN v, p",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Find the top 5 most frequently shipped products to Afghanistan.,"MATCH (p:Product)-[:WEIGHT]->(:Country {name: 'Afghanistan', shipment_number: IS NOT NULL})
RETURN p, count{(p)-[:WEIGHT]->(:Country {name: 'Afghanistan'})} AS shipments
ORDER BY shipments DESC
LIMIT 5",Pathfinding Queries,neo4j,True,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products that are part of the 'ARV' group and have a shipment number starting with 'ASN'?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:GROUP]->(:Product_Group {name: 'ARV'})
WHERE p.shipment_number STARTS WITH 'ASN'
RETURN DISTINCT v;",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all countries where products under the 'HIV test - Ancillary' sub class are sent.,"MATCH (c:Country)<-[:WEIGHT]-(p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'HIV test - Ancillary'})
RETURN DISTINCT c.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which office manages products with a shipment number 'DN-52'?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.shipment_number = 'DN-52'
RETURN o, p",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all countries to which products grouped under MRDT are shipped.,"MATCH (c:Country)<-[:WEIGHT]-(p:Product)-[:GROUP]->(:Product_Group{name: 'MRDT'})
WHERE p.shipment_number IS NOT NULL
RETURN DISTINCT c.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Show the first 3 products of the 'Pediatric' sub class managed by the Haiti Field Office.,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'Pediatric'})
MATCH (:Office{name: 'Haiti Field Office'})-[:MANAGED_BY]->(p)
RETURN p
LIMIT 3",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of products with a project code '100-CI-T01'?,"MATCH (p:Product)
WHERE p.project_code = '100-CI-T01'
RETURN p.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products have both an item description involving 'Tablets' and a project code ending in 'T01'?,"MATCH (p:Product)
WHERE p.item_description CONTAINS 'Tablets' AND p.project_code ENDS WITH 'T01'
RETURN p;",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 5 most expensive products based on their pack price?,"MATCH (p:Product)
WHERE p.pack_price IS NOT NULL
RETURN p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply the products under the ANTMs group with the highest pack prices?,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ANTM'})
WHERE p.pack_price IS NOT NULL
WITH p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 1
MATCH (v:Vendor)-[:VENDOR]->(p)
RETURN v.name as Vendor, p.pack_price as PackPrice, p.item_description as ProductDescription",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all products with a line item quantity of 1500 or more that are managed by an office in the US.,"MATCH (p:Product)
WHERE p.line_item_quantity >= ""1500""
AND (p)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN p",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify products that have a 'Pre-PQ Process' as their price quote and are associated with the brand 'Aluvia'.,"MATCH (p:Product)
WHERE p.price_quote = 'Pre-PQ Process' 
AND (p)-[:BRAND]->(:Brand {name: 'Aluvia'})
RETURN p",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which countries receive the most number of products with molecule test type containing 'HIV 1/2'?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.molecule_test_type CONTAINS 'HIV 1/2'
RETURN c.name, count(p) AS numberOfProducts
ORDER BY numberOfProducts DESC",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the sub classes of products managed by the Ethiopia Field Office with a unit of measure per pack of 30.,"MATCH (o:Office{name: 'Ethiopia Field Office'})-[:MANAGED_BY]->(p:Product)-[:SUB_CLASS]->(s:Sub_Class)
WHERE p.unit_of_measure_per_pack = ""30""
RETURN s",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products grouped under HRDT have a shipment number starting with 'DN'?,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'HRDT'})
WHERE p.shipment_number STARTS WITH 'DN'
RETURN p, p.shipment_number",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the brands of products that are managed by offices outside of the US.,"MATCH (p:Product)-[:MANAGED_BY]->(o:Office)
WHERE o.name <> 'PMO - US'
MATCH (p)-[:BRAND]->(b:Brand)
RETURN DISTINCT b.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
How many products with a molecule test type including 'Rapid' are managed by the PMO - US office?,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class {name: 'HIV test'})
WHERE p.molecule_test_type CONTAINS 'Rapid'
MATCH (p)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN count(p)",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the offices that manage products with a price quote status of 'Pre-PQ Process' and a shipment number containing '608'.,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.price_quote = 'Pre-PQ Process' 
AND p.shipment_number CONTAINS '608'
RETURN o",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors are associated with products shipped under shipment number 'ASN-8'?,"MATCH (p:Product)-[:VENDOR]->(v:Vendor)
WHERE p.shipment_number = 'ASN-8'
RETURN DISTINCT v.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the product groups for products that have 'Efavirenz' in their item description?,"MATCH (p:Product)
WHERE p.item_description CONTAINS 'Efavirenz'
MATCH (p)-[:GROUP]->(pg:Product_Group)
RETURN DISTINCT pg.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the countries to which products categorized under the 'Adult' sub class are shipped.,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.pid IS NOT NULL
AND p.item_description IS NOT NULL
AND p.sub_class = 'Adult'
RETURN DISTINCT c.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Show the first 3 products that are linked to the brand name 'Aluvia' and have a unit of measure per pack less than 50.,"MATCH (p:Product)-[:BRAND]->(:Brand {name: 'Aluvia'})
WHERE p.unit_of_measure_per_pack < 50
RETURN p
LIMIT 3",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products have a pack price between $30 and $100 and are managed by an office located in South Africa?,"MATCH (p:Product)
WHERE toFloat(p.pack_price) >= 30.0 AND toFloat(p.pack_price) <= 100.0
AND (p)-[:MANAGED_BY]->(:Office {name: 'South Africa Field Office'})
RETURN p;",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the sub classes for products that have a project code starting with '100' and are managed by an office in the US.,"MATCH (p:Product)-[:SUB_CLASS]->(s:Sub_Class)
WHERE p.project_code STARTS WITH '100'
AND (p)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN s.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the brands associated with products that have a project code '102-NG-T01'?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.project_code = '102-NG-T01'
RETURN DISTINCT b.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage products with a molecule test type 'Efavirenz'?,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'HIV test'})
WHERE p.molecule_test_type = 'Efavirenz'
MATCH (p)-[:MANAGED_BY]->(o:Office)
RETURN o;",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage the highest number of products in the 'HIV test' sub-class?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'HIV test'})
WITH o, count(p) AS numProducts
RETURN o.name, numProducts
ORDER BY numProducts DESC
LIMIT 1",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the brands associated with products that have a molecule test type including 'Efavirenz'?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.molecule_test_type CONTAINS 'Efavirenz' AND p.molecule_test_type IS NOT NULL
RETURN DISTINCT b.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 brands that have the most products associated with the 'ACT' product group?,"MATCH (b:Brand)-[:BRAND]->(p:Product)-[:GROUP]->(:Product_Group {name: 'ACT'})
WITH b, count(p) AS numProducts
ORDER BY numProducts DESC
RETURN b.name AS Brand, numProducts
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 offices by the number of products managed with a shipment number starting with 'ASN-'?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.shipment_number STARTS WITH 'ASN-'
RETURN o.name, count(p) AS num_products
ORDER BY num_products DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 product groups with the lowest average pack prices.,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WHERE p.pack_price IS NOT NULL
WITH pg, toFloat(p.pack_price) AS avgPackPrice
RETURN pg.name AS Product_Group, avg(avgPackPrice) AS Average_Pack_Price
ORDER BY Average_Pack_Price
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 sub-classes with the least diversity in molecule test types?,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.molecule_test_type IS NOT NULL
WITH sc, count(DISTINCT p.molecule_test_type) AS diversity
ORDER BY diversity
RETURN sc.name, diversity
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage products with the lowest average pack price and list the top 3?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.pack_price IS NOT NULL
WITH o, AVG(toFloat(p.pack_price)) AS avgPackPrice
ORDER BY avgPackPrice
RETURN o.name AS Office, avgPackPrice
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 countries receiving products with a shipment number starting with 'DN-'.,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.shipment_number STARTS WITH 'DN-' AND p.shipment_number IS NOT NULL
RETURN c.name, count(p) AS total_products_received
ORDER BY total_products_received DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products have a line item quantity of '10000' and are managed by the PMO - US office?,"MATCH (p:Product)
WHERE p.line_item_quantity = '10000'
AND (p)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN p;",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the brands associated with products that have a 'Pre-PQ Process' price quote?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.price_quote = 'Pre-PQ Process'
RETURN DISTINCT b.name",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the names of the sub-classes for products that have a pack price of '80.0'.,"MATCH (p:Product)
WHERE p.pack_price = '80.0' AND p.sub_class IS NOT NULL
RETURN p.sub_class.name",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 countries by the total weight of products shipped to them.,"MATCH (p:Product)-[w:WEIGHT]->(c:Country)
WHERE w.weight IS NOT NULL
WITH c.name AS country, SUM(toFloat(w.weight)) AS totalWeight
RETURN country, totalWeight
ORDER BY totalWeight DESC
LIMIT 3",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products are in the 'ARV' product group and have a project code starting with '100'?,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ARV'})
WHERE p.project_code STARTS WITH '100'
RETURN p;",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
"What are the top 5 vendors supplying the 'HIV 1/2, Determine Complete HIV Kit'?","MATCH (p:Product {molecule_test_type: 'HIV 1/2, Determine Complete HIV Kit'})-[:VENDOR]->(v:Vendor)
RETURN v.name, count{(p)-[:VENDOR]->(v)} AS total_products
ORDER BY total_products DESC
LIMIT 5",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply the most products with the 'HIV test' sub-class and list the top 5?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:SUB_CLASS]->(:Sub_Class {name: 'HIV test'})
WITH v, count(p) AS productCount
ORDER BY productCount DESC
RETURN v.name AS Vendor, productCount
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
"For products managed by the Haiti Field Office, what are the various product groups they belong to?","MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
MATCH (p)-[:MANAGED_BY]->(:Office {name: 'Haiti Field Office'})
RETURN DISTINCT pg.name;",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage products that are part of the 'Adult' sub-class?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)-[:SUB_CLASS]->(:Sub_Class {name: 'Adult'})
RETURN o, p",Verbose query,neo4j,False,True,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the countries associated with products that have a molecule test type containing 'Efavirenz'?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.molecule_test_type CONTAINS 'Efavirenz' AND p.molecule_test_type IS NOT NULL
RETURN DISTINCT c.name",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products have a unit of measure per pack of '30' and are in the 'HIV test' sub-class?,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack = '30' 
AND p.sub_class = 'HIV test'
RETURN p;",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Name the top 5 products (by pid) that have a 'Pre-PQ Process' price quote and are in the 'Malaria' sub-class.,"MATCH (p:Product)
WHERE p.price_quote = 'Pre-PQ Process' 
AND p.pid IS NOT NULL
AND (p)-[:SUB_CLASS]->(:Sub_Class {name: 'Malaria'})
RETURN p
ORDER BY p.pid
LIMIT 5",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the brands associated with products that have a pack price over '50.0'.,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE toFloat(p.pack_price) > 50.0
RETURN DISTINCT b.name",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
"Which vendors supply products to the Ethiopia Field Office that have a molecule test type of 'HIV 1/2, Determine Complete HIV Kit'?","MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:SUB_CLASS]->(:Sub_Class {name: 'HIV 1/2, Determine Complete HIV Kit'})
MATCH (p)-[:WEIGHT]->(:Country {name: 'Ethiopia'})
MATCH (o:Office {name: 'Ethiopia Field Office'})-[:MANAGED_BY]->(p)
RETURN v, p",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the product groups for the top 3 products with the highest line item quantity.,"MATCH (p:Product)
WHERE p.line_item_quantity IS NOT NULL
RETURN p.product_group
ORDER BY toInteger(p.line_item_quantity) DESC
LIMIT 3",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the offices that manage products with a shipment number starting with 'DN'?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.shipment_number STARTS WITH 'DN' AND p.shipment_number IS NOT NULL
RETURN o.name",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the product descriptions for products that are managed by the South Africa Field Office and have a pack price of '29.0'.,"MATCH (p:Product)-[:MANAGED_BY]->(:Office{name: 'South Africa Field Office'})
WHERE p.pack_price = '29.0' AND p.item_description IS NOT NULL
RETURN p.item_description",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products have a project code '102-NG-T01' and are associated with the 'ACT' product group?,"MATCH (p:Product)
WHERE p.project_code = '102-NG-T01' 
AND (p)-[:GROUP]->(:Product_Group {name: 'ACT'})
RETURN p",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 product descriptions for products that have been shipped under shipment number 'ASN-608'.,"MATCH (p:Product)-[:WEIGHT]->(:Country)
WHERE p.shipment_number = 'ASN-608'
RETURN p.item_description
ORDER BY p.pid
LIMIT 3",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 5 products by pack price in the 'Pediatric' sub-class?,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'Pediatric'})
WHERE p.pack_price IS NOT NULL
RETURN p.item_description, p.pack_price
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 offices managing products with the highest average unit of measure per pack.,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.unit_of_measure_per_pack IS NOT NULL
WITH o, p
ORDER BY p.unit_of_measure_per_pack DESC
RETURN o.name, AVG(p.unit_of_measure_per_pack) AS avg_unit_measure_per_pack
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which sub-classes have the most products with a pack price over $100 and list the top 5?,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.pack_price IS NOT NULL AND toFloat(p.pack_price) > 100
RETURN sc.name, count(p) AS numProducts
ORDER BY numProducts DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which countries receive products with the highest average pack prices and list the top 3?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.pack_price IS NOT NULL
WITH c, AVG(toFloat(p.pack_price)) AS avgPackPrice
RETURN c.name AS Country, avgPackPrice
ORDER BY avgPackPrice DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 5 products by line item quantity in the 'ANTM' product group?,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ANTM'})
WHERE p.line_item_quantity IS NOT NULL
RETURN p.line_item_quantity, p.item_description
ORDER BY toInteger(p.line_item_quantity) DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 highest weight relationships from products to countries.,"MATCH (p:Product)-[w:WEIGHT]->(c:Country)
WHERE w.weight IS NOT NULL
RETURN p, w, c
ORDER BY w.weight DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which sub-classes have products with a unit of measure per pack of exactly 100 and list the top 5?,"MATCH (p:Product)-[:SUB_CLASS]->(s:Sub_Class)
WHERE p.unit_of_measure_per_pack = ""100"" AND p.unit_of_measure_per_pack IS NOT NULL
RETURN s.name, count{(p)-[:SUB_CLASS]->(s)} AS productCount
ORDER BY productCount DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 offices managing products with the 'Pre-PQ Process' price quote?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.price_quote = 'Pre-PQ Process'
RETURN o.name, count(p) AS total_products
ORDER BY total_products DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 product groups associated with the most brands.,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WITH pg, count(DISTINCT p) AS numBrands
RETURN pg.name AS Product_Group, numBrands
ORDER BY numBrands DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which brands are linked to products managed by the 'Haiti Field Office' and list the top 3?,"MATCH (b:Brand)<-[:BRAND]-(p:Product)-[:MANAGED_BY]->(:Office {name: 'Haiti Field Office'})
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 vendors supplying products to 'South Africa Field Office' managed products?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:MANAGED_BY]->(:Office {name: 'South Africa Field Office'})
RETURN v.name, count{(v)-[:VENDOR]->(:Product)-[:MANAGED_BY]->(:Office {name: 'South Africa Field Office'})} AS productsSupplied
ORDER BY productsSupplied DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 product groups by the average pack price of their products.,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WHERE p.pack_price IS NOT NULL
WITH pg, toFloat(p.pack_price) AS avgPackPrice
RETURN pg.name AS Product_Group, avg(avgPackPrice) AS Average_Pack_Price
ORDER BY Average_Pack_Price DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which sub-classes are associated with products having a shipment number starting with 'DN-' and list the top 5?,"MATCH (p:Product)-[:SUB_CLASS]->(s:Sub_Class)
WHERE p.shipment_number STARTS WITH 'DN-' AND p.shipment_number IS NOT NULL
RETURN s.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 countries by the total weight of products shipped to them?,"MATCH (p:Product)-[w:WEIGHT]->(c:Country)
WHERE w.weight IS NOT NULL
RETURN c.name, sum(w.weight) AS total_weight
ORDER BY total_weight DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
"Which offices manage products with 'HIV 1/2, Determine Complete HIV Kit' as their molecule test type and list the top 3?","MATCH (p:Product)
WHERE p.molecule_test_type = 'HIV 1/2, Determine Complete HIV Kit'
MATCH (o:Office)-[:MANAGED_BY]->(p)
RETURN o.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 products with the highest pack prices in the 'HIV test - Ancillary' sub-class.,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'HIV test - Ancillary'})
WHERE p.pack_price IS NOT NULL
RETURN p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 3 brands with the lowest average pack price per product?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.pack_price IS NOT NULL
WITH b.name AS brand, toFloat(p.pack_price) AS avgPackPrice
WITH brand, avg(avgPackPrice) AS averagePackPrice
RETURN brand, averagePackPrice
ORDER BY averagePackPrice
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products with '30 Tests' in their item description and list the top 5?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE p.item_description CONTAINS '30 Tests' AND p.item_description IS NOT NULL
RETURN v.name, p.item_description
ORDER BY v.name
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 product groups with products having more than one molecule test type listed.,"MATCH (p:Product)
WHERE p.molecule_test_type IS NOT NULL
WITH p, count(p.molecule_test_type) AS numMoleculeTypes
ORDER BY numMoleculeTypes DESC
LIMIT 5
RETURN p.product_group, numMoleculeTypes",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 sub-classes with the most products having '100-CI-T01' as their project code?,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.project_code = '100-CI-T01' AND p.project_code IS NOT NULL
RETURN sc.name, count{(p)-[:SUB_CLASS]->(sc)} AS product_count
ORDER BY product_count DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage the highest number of products in the 'ARV' product group and list the top 3?,"MATCH (p:Product)-[:GROUP]->(:Product_Group{name: 'ARV'})
WITH p, count(p) AS productCount
MATCH (o:Office)-[:MANAGED_BY]->(p)
RETURN o.name, productCount
ORDER BY productCount DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 countries receiving products from 'ABBOTT LABORATORIES (PUERTO RICO)' based on the shipment number.,"MATCH (v:Vendor {name: 'ABBOTT LABORATORIES (PUERTO RICO)'})-[:VENDOR]->(p:Product)-[:WEIGHT]->(c:Country)
WHERE p.shipment_number IS NOT NULL
RETURN c.name, count{(p)-[:WEIGHT]->(c)} AS products_received
ORDER BY products_received DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 brands with products having the highest line item quantity?,"MATCH (p:Product)
WHERE p.line_item_quantity IS NOT NULL
RETURN p.brand, p.line_item_quantity
ORDER BY toInteger(p.line_item_quantity) DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products with the 'Pre-PQ Process' price quote and list the top 5?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE p.price_quote = 'Pre-PQ Process'
RETURN v.name, count{(v)-[:VENDOR]->(:Product {price_quote: 'Pre-PQ Process'})} AS product_count
ORDER BY product_count DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 countries receiving the least quantity of products based on line item quantity.,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.line_item_quantity IS NOT NULL
RETURN c.name, sum(toInteger(p.line_item_quantity)) AS total_quantity
ORDER BY total_quantity ASC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 product groups by the number of different shipment numbers associated with their products?,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WHERE p.shipment_number IS NOT NULL
RETURN pg.name, count(DISTINCT p.shipment_number) AS numShipments
ORDER BY numShipments DESC
LIMIT 3",Complex Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 vendors by the number of products with a unit of measure per pack greater than 50.,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack > 50
MATCH (v:Vendor)-[:VENDOR]->(p)
RETURN v.name, count(p) AS num_products
ORDER BY num_products DESC
LIMIT 5",Complex Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all product groups associated with products that have a shipment number 'ASN-608'.,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WHERE p.shipment_number = 'ASN-608'
RETURN DISTINCT pg.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Find the top 5 products managed by the South Africa Field Office based on their pack price.,"MATCH (p:Product)-[:MANAGED_BY]->(:Office {name: 'South Africa Field Office'})
RETURN p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products with a project code starting with '102'?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE p.project_code STARTS WITH '102' AND p.project_code IS NOT NULL
RETURN v, p;",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 product groups for products with a molecule test type that includes 'Abacavir'.,"MATCH (p:Product)
WHERE p.molecule_test_type IS NOT NULL AND p.molecule_test_type CONTAINS 'Abacavir'
WITH p
MATCH (p)-[:GROUP]->(pg:Product_Group)
RETURN pg.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 sub classes are linked to the most products with a project code starting with '100-CI'?,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.project_code STARTS WITH '100-CI'
RETURN sc.name, count(p) AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 countries linked to products with a pack price of 44.05?,"MATCH (p:Product)
WHERE p.pack_price = ""44.05""
MATCH (p)-[:WEIGHT]->(c:Country)
RETURN c.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 vendors supply products with the highest line item quantities?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE p.line_item_quantity IS NOT NULL
RETURN v.name, sum(toInteger(p.line_item_quantity)) AS total_quantity
ORDER BY total_quantity DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 brands linked to products managed by the South Africa Field Office.,"MATCH (:Office{name: 'South Africa Field Office'})-[:MANAGED_BY]->(p:Product)-[:BRAND]->(b:Brand)
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 product groups are linked to products with an item description including 'HIV Kit'?,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WHERE p.item_description CONTAINS 'HIV Kit'
RETURN DISTINCT pg.name
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 sub classes for products managed by the PMO - US office.,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
MATCH (o:Office {name: 'PMO - US'})-[:MANAGED_BY]->(p)
RETURN sc.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 3 vendors supplying products to countries with a shipment number like 'ASN-%'?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
MATCH (v:Vendor)-[:VENDOR]->(p)
WHERE c.shipment_number IS NOT NULL AND c.shipment_number STARTS WITH 'ASN-'
RETURN v.name, count{(v)-[:VENDOR]->(:Product)} AS products_supplied
ORDER BY products_supplied DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage the top 5 products with the smallest unit of measure per pack?,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack IS NOT NULL
RETURN p
ORDER BY toInteger(p.unit_of_measure_per_pack)
LIMIT 5
MATCH (o:Office)-[:MANAGED_BY]->(p)
RETURN o, p.unit_of_measure_per_pack
ORDER BY toInteger(p.unit_of_measure_per_pack)",Simple Retrieval Queries,neo4j,True,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 brands of products that have a project code like '102-%'.,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.project_code STARTS WITH '102-'
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 offices manage the most products with a shipment number starting with 'DN'?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.shipment_number STARTS WITH 'DN'
RETURN o, count(p) AS totalProducts
ORDER BY totalProducts DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 product groups are most frequently linked to products with a line item quantity less than 200?,"MATCH (p:Product)
WHERE p.line_item_quantity < 200
WITH p, count((p)-[:GROUP]->(:Product_Group)) AS group_count
RETURN p, group_count
ORDER BY group_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,True,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 countries receiving products with a molecule test type of 'Abacavir'?,"MATCH (p:Product)
WHERE p.molecule_test_type = 'Abacavir'
MATCH (p)-[:WEIGHT]->(c:Country)
RETURN c.name, count{(p)-[:WEIGHT]->(c)} AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 vendors supply products with a price quote of 'Pre-PQ Process'?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE p.price_quote = 'Pre-PQ Process'
RETURN v.name, p
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 brands linked to products with a unit of measure per pack of 100.,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack = ""100"" AND p.pid IS NOT NULL
MATCH (p)-[:BRAND]->(b:Brand)
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 product groups are linked to the most products managed by the Ethiopia Field Office?,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
MATCH (p)-[:MANAGED_BY]->(:Office {name: 'Ethiopia Field Office'})
RETURN pg.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 sub classes for products with a pack price greater than 75.,"MATCH (p:Product)
WHERE p.pack_price > 75
WITH p
MATCH (p)-[:SUB_CLASS]->(sc:Sub_Class)
RETURN sc.name, count{(p)-[:SUB_CLASS]->()} AS product_count
ORDER BY product_count DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 3 vendors supplying products with a line item quantity greater than 1000?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE toInteger(p.line_item_quantity) > 1000
RETURN v.name, count(p) AS total_products
ORDER BY total_products DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage the top 3 products with a project code starting with '100-CI'?,"MATCH (p:Product)-[:MANAGED_BY]->(o:Office)
WHERE p.project_code STARTS WITH '100-CI'
RETURN o, p
ORDER BY p.pid DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 brands of products managed by the Haiti Field Office.,"MATCH (o:Office {name: 'Haiti Field Office'})-[:MANAGED_BY]->(p:Product)-[:BRAND]->(b:Brand)
RETURN b.name, count(p) AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 product groups are most common among products with a molecule test type of 'HIV'?,"MATCH (p:Product)
WHERE p.molecule_test_type = 'HIV'
WITH p, COUNT(p) AS productCount
RETURN p.product_group AS ProductGroup, productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 sub classes for products managed by any office with a project code like '102-%'.,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE (p)-[:MANAGED_BY]->(:Office)-[:MANAGED_BY]->(:Product {project_code: '102-%'})
RETURN sc.name, count(sc) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 sub classes for products with a shipment number ending in '-71'.,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.shipment_number ENDS WITH '-71'
RETURN sc.name, count{(p)-[:SUB_CLASS]->(sc)} AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 brands associated with the most expensive products based on pack price?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.pack_price IS NOT NULL
RETURN b.name, toFloat(p.pack_price) AS packPrice
ORDER BY packPrice DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 products from the 'ANTM' product group managed by any office.,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ANTM'})-[:MANAGED_BY]->(:Office)
RETURN p
ORDER BY p.line_item_quantity DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 vendors supply products that are managed by the Haiti Field Office?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:MANAGED_BY]->(:Office {name: 'Haiti Field Office'})
RETURN v.name, count(p) AS productsSupplied
ORDER BY productsSupplied DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
"List the top 3 products with a molecule test type of 'HIV 1/2, Determine Complete HIV Kit'.","MATCH (p:Product)
WHERE p.molecule_test_type = 'HIV 1/2, Determine Complete HIV Kit'
RETURN p
ORDER BY p.pid
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 products have a pack price greater than 50?,"MATCH (p:Product)
WHERE p.pack_price IS NOT NULL AND toFloat(p.pack_price) > 50
RETURN p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 5 countries where products with a line item quantity greater than 100 are shipped.,"MATCH (p:Product)
WHERE p.line_item_quantity > 100
MATCH (p)-[:WEIGHT]->(c:Country)
RETURN c.name, count(p) AS total_products
ORDER BY total_products DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply the top 3 products with the highest pack prices?,"MATCH (p:Product)-[:VENDOR]->(v:Vendor)
WHERE p.pack_price IS NOT NULL
RETURN v.name, p.molecule_test_type, p.pack_price
ORDER BY toFloat(p.pack_price) DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 brands associated with products managed by the PMO - US office?,"MATCH (o:Office {name: 'PMO - US'})-[:MANAGED_BY]->(p:Product)-[:BRAND]->(b:Brand)
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 product groups associated with products having a unit of measure per pack greater than 50.,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack > 50
WITH p, p.name AS product_name, p.unit_of_measure_per_pack AS unit_measure
MATCH (p)-[:GROUP]->(pg:Product_Group)
RETURN pg.name AS product_group, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 sub classes are assigned to products with a shipment number starting with 'ASN'?,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.shipment_number STARTS WITH 'ASN' AND sc.name IS NOT NULL
RETURN DISTINCT sc.name
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products with a price quote of 'Pre-PQ Process' are managed by the South Africa Field Office?,"MATCH (p:Product)
WHERE p.price_quote = 'Pre-PQ Process'
AND (p)-[:MANAGED_BY]->(:Office {name: 'South Africa Field Office'})
RETURN p",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 products with a line item quantity less than 300.,"MATCH (p:Product)
WHERE p.line_item_quantity < ""300"" AND p.line_item_quantity IS NOT NULL
RETURN p
ORDER BY toInteger(p.line_item_quantity)
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 countries linked by WEIGHT relationship to products with a molecule test type of 'HIV'?,"MATCH (p:Product)
WHERE p.molecule_test_type = 'HIV'
MATCH (p)-[:WEIGHT]->(c:Country)
RETURN c.name, count{(p)-[:WEIGHT]->(c)} AS weight_count
ORDER BY weight_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 offices manage products with a project code like '102-%'?,"MATCH (p:Product)-[:MANAGED_BY]->(o:Office)
WHERE p.project_code STARTS WITH '102-'
RETURN DISTINCT o.name
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 products under the product group 'ARV' managed by any office.,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ARV'})-[:MANAGED_BY]->(o:Office)
RETURN p
ORDER BY p.line_item_quantity DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 brands of products that have a 'Pediatric' subclass?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE (p)-[:SUB_CLASS]->(:Sub_Class {name: 'Pediatric'})
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors are linked to the top 3 products having an item description that includes 'tablets'?,"MATCH (p:Product)
WHERE p.item_description CONTAINS 'tablets'
MATCH (p)-[:VENDOR]->(v:Vendor)
RETURN DISTINCT v.name
ORDER BY p.pid
LIMIT 3",Simple Retrieval Queries,neo4j,True,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 product groups for products with a shipment number ending in '-128'.,"MATCH (p:Product)
WHERE p.shipment_number ENDS WITH '-128' AND p.product_group IS NOT NULL
RETURN p.product_group, count(p.product_group) AS total_products
ORDER BY total_products DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 sub classes are most common among products with a line item quantity over 500?,"MATCH (p:Product)
WHERE toInteger(p.line_item_quantity) > 500
WITH p
MATCH (p)-[:SUB_CLASS]->(sc:Sub_Class)
RETURN sc.name, count(p) AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 countries where products with a 'HIV test' subclass are shipped.,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.sub_class = 'HIV test' AND p.shipment_number IS NOT NULL
RETURN c.name, count{(p)-[:WEIGHT]->(c)} AS shipment_count
ORDER BY shipment_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 3 vendors who supply products to the Ethiopia Field Office?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:MANAGED_BY]->(:Office {name: 'Ethiopia Field Office'})
RETURN v.name, count(p) AS products_supplied
ORDER BY products_supplied DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage the top 5 products with the highest pack prices?,"MATCH (p:Product)-[:MANAGED_BY]->(o:Office)
WHERE p.pack_price IS NOT NULL
RETURN o.name, p.pack_price
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 brands linked to products with a molecule test type including 'HIV'.,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.molecule_test_type CONTAINS 'HIV'
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 product groups are most frequently associated with products having a pack price less than 30?,"MATCH (p:Product)
WHERE p.pack_price < 30 IS NOT NULL
WITH p, count((p)-[:GROUP]->(:Product_Group)) AS group_count
RETURN p, group_count
ORDER BY group_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,True,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 3 sub classes for products with a price quote status of 'Pre-PQ Process'.,"MATCH (p:Product)-[:SUB_CLASS]->(sc:Sub_Class)
WHERE p.price_quote = 'Pre-PQ Process'
RETURN sc.name, count{(p)-[:SUB_CLASS]->(sc)} AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 countries receiving products with a unit of measure per pack of 60?,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack = ""60""
MATCH (p)-[:WEIGHT]->(c:Country)
RETURN c.name, count{(p)-[:WEIGHT]->(c)} AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 countries linked to products with a unit of measure per pack less than 60?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.unit_of_measure_per_pack < 60
RETURN c.name, count{(p)-[:WEIGHT]->(c)} AS productCount
ORDER BY productCount DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 vendors supply the most products with a shipment number starting with 'DN'?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE p.shipment_number STARTS WITH 'DN'
RETURN v.name, count(p) AS totalProducts
ORDER BY totalProducts DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the top 3 brands linked to products with a line item quantity over 500.,"MATCH (p:Product)
WHERE toInteger(p.line_item_quantity) > 500
MATCH (p)-[:BRAND]->(b:Brand)
RETURN b.name, count(p) AS total_products
ORDER BY total_products DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which 3 product groups are linked to products with a shipment number like 'ASN-%'?,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WHERE p.shipment_number IS NOT NULL AND p.shipment_number STARTS WITH 'ASN-'
RETURN DISTINCT pg.name
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Find the top 3 brands by the number of products they are associated with.,"MATCH (b:Brand)<-[:BRAND]-(p:Product)
WITH b, count(p) AS numProducts
RETURN b.name AS Brand, numProducts
ORDER BY numProducts DESC
LIMIT 3",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 5 most expensive products based on pack price?,"MATCH (p:Product)
WHERE p.pack_price IS NOT NULL
RETURN p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify all products that have 'HIV test' as their sub class.,"MATCH (p:Product)-[:SUB_CLASS]->(s:Sub_Class)
WHERE s.name = 'HIV test'
RETURN p",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the project codes for products managed by the PMO - US office?,"MATCH (p:Product)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN p.project_code",Simple Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all product IDs that have been shipped more than once.,"MATCH (p:Product)
WHERE p.shipment_number IS NOT NULL
WITH p.pid AS productID, count{(p)--(:Country)} AS shipmentCount
WHERE shipmentCount > 1
RETURN productID",Simple Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage products with a price quote of 'Pre-PQ Process'?,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)
WHERE p.price_quote = 'Pre-PQ Process'
RETURN o, p",Simple Aggregation Queries,neo4j,False,True,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
How many products are there in each product group?,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
RETURN pg.name, count(p) AS number_of_products",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which product groups are associated with products having a shipment number starting with 'ASN'?,"MATCH (p:Product)-[:GROUP]->(pg:Product_Group)
WHERE p.shipment_number STARTS WITH 'ASN' AND p.shipment_number IS NOT NULL
RETURN DISTINCT pg.name",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the products with a unit of measure per pack greater than 50.,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack > 50
RETURN p;",Simple Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which Sub_Class categories are linked to more than 5 products?,"MATCH (p:Product)-[:SUB_CLASS]->(s:Sub_Class)
WITH s, count(p) AS numProducts
WHERE numProducts > 5
RETURN s.name as Sub_Class, numProducts as NumberOfProducts",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all the products that have been shipped under shipment number 'ASN-608'.,"MATCH (p:Product)-[:WEIGHT]->(:Country)
WHERE p.shipment_number = 'ASN-608'
RETURN p",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Find products that are linked to the brand 'Aluvia'.,"MATCH (p:Product)-[:BRAND]->(:Brand {name: 'Aluvia'})
RETURN p",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the distinct item descriptions available for products managed by the Ethiopia Field Office?,"MATCH (p:Product)-[:MANAGED_BY]->(:Office {name: 'Ethiopia Field Office'})
RETURN DISTINCT p.item_description",Simple Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products to more than one country?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:WEIGHT]->(c:Country)
WITH v, count(DISTINCT c) AS numCountries
WHERE numCountries > 1
RETURN v, numCountries",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Show all products which have a molecule test type containing 'HIV 1/2'.,"MATCH (p:Product)
WHERE p.molecule_test_type CONTAINS 'HIV 1/2'
RETURN p",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
How many different offices manage products within the 'HIV test' sub class?,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'HIV test'})
MATCH (o:Office)-[:MANAGED_BY]->(p)
RETURN count(DISTINCT o) AS NumberOfOffices;",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products are managed by the Haiti Field Office and have a pack price greater than $100?,"MATCH (p:Product)-[:MANAGED_BY]->(:Office{name: 'Haiti Field Office'})
WHERE p.pack_price IS NOT NULL AND toFloat(p.pack_price) > 100
RETURN p;",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of vendors that supply products to the Ethiopia Field Office?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:MANAGED_BY]->(:Office {name: 'Ethiopia Field Office'})
RETURN v.name",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all products with a molecule test type containing 'HIV' that are managed by the PMO - US office.,"MATCH (p:Product)
WHERE p.molecule_test_type CONTAINS 'HIV'
AND (p)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN p",Pathfinding Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which brands are associated with products that have a pack price less than $50?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE toFloat(p.pack_price) < 50.0
RETURN DISTINCT b.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of countries where products with a pack price over $200 are sent?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.pack_price IS NOT NULL AND toFloat(p.pack_price) > 200
RETURN DISTINCT c.name",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
How many products under the ARV group have a line item quantity greater than 1000?,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ARV'})
WHERE p.line_item_quantity > 1000
RETURN count(p)",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify products that are of the 'HIV test' sub class and have a unit of measure per pack of 100.,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class {name: 'HIV test'})
WHERE p.unit_of_measure_per_pack = ""100""
RETURN p",Pathfinding Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products are categorized under the Product_Group 'ARV'?,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ARV'})
RETURN p;",Simple Aggregation Queries,neo4j,False,True,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Name the brands associated with products that have the item description containing 'tablets'.,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.item_description CONTAINS 'tablets'
RETURN DISTINCT b.name",Verbose query,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the countries associated with products having more than 1000 units of line item quantity?,"MATCH (p:Product)
WHERE toInteger(p.line_item_quantity) > 1000
MATCH (p)-[:WEIGHT]->(c:Country)
RETURN c.name",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products are managed by the Haiti Field Office?,"MATCH (p:Product)-[:MANAGED_BY]->(:Office {name: 'Haiti Field Office'})
RETURN p",Simple Aggregation Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 sub classes for products with a price quote of 'Pre-PQ Process'.,"MATCH (p:Product)
WHERE p.price_quote = 'Pre-PQ Process'
WITH p
MATCH (p)-[:SUB_CLASS]->(sc:Sub_Class)
RETURN sc.name, count{(p)-[:SUB_CLASS]->()} AS productCount
ORDER BY productCount DESC
LIMIT 5",Simple Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the top 3 vendors supplying products with a pack price less than 30?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE p.pack_price < 30.0 AND p.pack_price IS NOT NULL
RETURN v.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 3",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which offices manage the most products with a molecule test type of 'HIV'?,"MATCH (p:Product)
WHERE p.molecule_test_type = 'HIV'
MATCH (o:Office)-[:MANAGED_BY]->(p)
RETURN o.name, count(p) AS num_products
ORDER BY num_products DESC;",Simple Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which products have a pack price greater than $50 and are managed by the PMO - US office?,"MATCH (p:Product)
WHERE p.pack_price > 50.0
AND (p)-[:MANAGED_BY]->(:Office {name: 'PMO - US'})
RETURN p",Complex Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 products by line item quantity that are associated with the HIV test subclass.,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class{name: 'HIV test'})
WHERE p.line_item_quantity IS NOT NULL
RETURN p
ORDER BY toInteger(p.line_item_quantity) DESC
LIMIT 5",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the first 3 product groups associated with products that have a shipment number starting with 'DN'?,"MATCH (p:Product)
WHERE p.shipment_number STARTS WITH 'DN'
RETURN p.product_group
ORDER BY p.pid
LIMIT 3;",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify products that are linked to the brand 'Aluvia' and have a molecule test type containing 'HIV'.,"MATCH (p:Product)-[:BRAND]->(:Brand {name: 'Aluvia'})
WHERE p.molecule_test_type CONTAINS 'HIV'
RETURN p",Complex Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which vendors supply products with a pack price less than $100?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)
WHERE toFloat(p.pack_price) < 100.0
RETURN v, p",Complex Retrieval Queries,neo4j,False,True,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the countries linked to products with a 'unit_of_measure_per_pack' greater than 50?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.unit_of_measure_per_pack > 50
RETURN DISTINCT c.name",Complex Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all products with a project code starting with '100' and having a 'price_quote' status of 'Pre-PQ Process'.,"MATCH (p:Product)
WHERE p.project_code STARTS WITH '100' 
AND p.price_quote = 'Pre-PQ Process'
RETURN p",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 3 most common sub classes for products managed by the Ethiopia Field Office?,"MATCH (o:Office{name: 'Ethiopia Field Office'})-[:MANAGED_BY]->(p:Product)-[:SUB_CLASS]->(s:Sub_Class)
RETURN s.name, count(s) AS sub_class_count
ORDER BY sub_class_count DESC
LIMIT 3",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify products that are linked to the 'ARV' product group and have a shipment number ending with '8'.,"MATCH (p:Product)-[:GROUP]->(:Product_Group {name: 'ARV'})
WHERE p.shipment_number ENDS WITH '8' AND p.shipment_number IS NOT NULL
RETURN p",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which office manages the product with the highest line item quantity?,"MATCH (p:Product)
WHERE p.line_item_quantity IS NOT NULL
WITH p
ORDER BY toInteger(p.line_item_quantity) DESC
LIMIT 1
MATCH (p)-[:MANAGED_BY]->(o:Office)
RETURN o.name as OfficeManagingProduct",Complex Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the top 5 brands associated with products that have a 'unit_of_measure_per_pack' of 100.,"MATCH (p:Product)
WHERE p.unit_of_measure_per_pack = ""100"" AND p.unit_of_measure_per_pack IS NOT NULL
MATCH (p)-[:BRAND]->(b:Brand)
RETURN b.name, count(p) AS product_count
ORDER BY product_count DESC
LIMIT 5",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the first 3 products that have a molecule test type related to 'HIV' and are managed by an office in Haiti?,"MATCH (p:Product)
WHERE p.molecule_test_type CONTAINS 'HIV'
AND (p)-[:MANAGED_BY]->(:Office {name: 'Haiti Field Office'})
RETURN p
ORDER BY p.pid
LIMIT 3",Complex Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the names of the vendors supplying products to the South Africa Field Office?,"MATCH (v:Vendor)-[:VENDOR]->(p:Product)-[:MANAGED_BY]->(:Office {name: 'South Africa Field Office'})
RETURN DISTINCT v.name",Complex Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
How many different product groups are associated with the products that have a shipment number starting with 'ASN'?,"MATCH (p:Product)
WHERE p.shipment_number STARTS WITH 'ASN' AND p.shipment_number IS NOT NULL
WITH p
MATCH (p)-[:GROUP]->(pg:Product_Group)
RETURN COUNT(DISTINCT pg) AS NumberOfProductGroups",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which countries receive products with a 'price_quote' status of 'Pre-PQ Process'?,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.price_quote = 'Pre-PQ Process'
RETURN DISTINCT c.name",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the top 5 products with the highest pack price managed by any field office?,"MATCH (p:Product)-[:MANAGED_BY]->(o:Office)
WHERE p.pack_price IS NOT NULL
RETURN p
ORDER BY toFloat(p.pack_price) DESC
LIMIT 5",Complex Retrieval Queries,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Identify the product groups linked to products with a 'line_item_quantity' less than 20.,"MATCH (p:Product)
WHERE toInteger(p.line_item_quantity) < 20
MATCH (p)-[:GROUP]->(pg:Product_Group)
RETURN DISTINCT pg.name",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
What are the first 3 products with a pid greater than 100 and linked to the 'HIV test' sub class?,"MATCH (p:Product)-[:SUB_CLASS]->(:Sub_Class {name: 'HIV test'})
WHERE p.pid > 100 AND p.pid IS NOT NULL
RETURN p
ORDER BY p.pid
LIMIT 3",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
Which brands are linked to products with a 'project_code' that starts with '102'?,"MATCH (p:Product)-[:BRAND]->(b:Brand)
WHERE p.project_code STARTS WITH '102'
RETURN DISTINCT b.name",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all offices that manage products associated with the 'ANTM' product group.,"MATCH (o:Office)-[:MANAGED_BY]->(p:Product)-[:GROUP]->(:Product_Group{name: 'ANTM'})
RETURN o",Complex Retrieval Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List all products related to the vendor 'ABBOTT LABORATORIES (PUERTO RICO)'.,"MATCH (v:Vendor {name: 'ABBOTT LABORATORIES (PUERTO RICO)'})-->(p:Product)
RETURN p",Simple Aggregation Queries,neo4j,False,False,True,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
List the countries where products with a 'HIV test - Ancillary' sub-class are shipped to.,"MATCH (p:Product)-[:WEIGHT]->(c:Country)
WHERE p.sub_class = 'HIV test - Ancillary' AND p.shipment_number IS NOT NULL
RETURN DISTINCT c.name",Verbose query,neo4j,False,False,False,"Node properties:
Product {unit_of_measure_per_pack: STRING, line_item_quantity: STRING, pack_price: STRING, embedding: LIST, molecule_test_type: STRING, shipment_number: STRING, pid: INTEGER, item_description: STRING, project_code: STRING, price_quote: STRING}
Country {name: STRING}
Vendor {name: STRING}
Brand {name: STRING}
Product_Group {name: STRING}
Sub_Class {name: STRING}
Office {name: STRING}
Relationship properties:
WEIGHT {weight: FLOAT}
The relationships:
(:Product)-[:WEIGHT]->(:Country)
(:Product)-[:BRAND]->(:Brand)
(:Product)-[:GROUP]->(:Product_Group)
(:Product)-[:SUB_CLASS]->(:Sub_Class)
(:Vendor)-[:VENDOR]->(:Product)
(:Office)-[:MANAGED_BY]->(:Product)"
